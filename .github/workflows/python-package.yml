# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: Python package

on:
  push:
    branches: [ "master", "dev"]
  pull_request:
    branches: [ "master", "dev" ]

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.9", "3.10", "3.11"]

    steps:
    - uses: actions/checkout@v3
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install flake8 pytest
        pip install -e .[test]
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    - name: Test with pytest
      run: |
        pytest  tests/ --doctest-modules src

  integration:
    needs: build
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.9", "3.10", "3.11"]

    steps:
    - uses: actions/checkout@v3
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -e .
    - name: Set variables
      run: |
        export HYDRA_FULL_ERROR=1
        data="data=tests/data/TestPackage/test.package.json"
        patterns="patterns=tests/scripts/test_run_pat/metadata.json"
    - name: Run patterns
      run: |
        rm -rf tests/scripts/test_run_pat
        qumin hydra.run.dir=tests/scripts/test_run_pat $data action=patterns
    - name: Run entropies
      run: | 
        rm -rf tests/scripts/test_run_ent
        qumin hydra.run.dir=tests/scripts/test_run_ent $data $patterns action=H
    - name: Run lattices
      run: |
        rm -rf tests/scripts/test_run_lat
        qumin hydra.run.dir=tests/scripts/test_run_lat $data $patterns action=lattice
    - name: Run macroclasses
      run: |
        rm -rf tests/scripts/test_run_mac
        qumin hydra.run.dir=tests/scripts/test_run_mac  $data $patterns action=macroclasses
    - name: Run class heatmap
      run: |
        rm -rf tests/scripts/test_run_hmap
        qumin hydra.run.dir=tests/scripts/test_run_hmap  $data $patterns action=heatmap
    - name: Run evaluation
      run: |
        rm -rf tests/scripts/test_run_eval
        qumin hydra.run.dir=tests/scripts/test_run_eval $data action=eval
